@page "/friends"
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Text.Json.Serialization;
@using Blazor.Extensions.Storage
@using System.Text.Json
@inject HttpClient Http
@inject LocalStorage localStorage

@if (loggedIn == true)
{
    @if (friends == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="container">
            <div class="row">

                @foreach (Friend fr in friends)
                {
                    <div class="col">
                        <div class="card px-2" style="width: 18rem;">
                            <img src="https://scontent.fosl3-2.fna.fbcdn.net/v/t1.0-9/11960226_118365771847090_8903831627453773999_n.jpg?_nc_cat=106&_nc_oc=AQm1Gq--bxQH8tOi2D5HZV4Yg2XeZoju10nQBXnI_B1cIJwfZ1qWnz9xkfrBWhr_UFqWjLmyl0RuxTB30Dw7BY9Q&_nc_ht=scontent.fosl3-2.fna&oh=b7af62b04d2e599840da08bd7cec516b&oe=5E2E0A83" class="card-img-top" alt="">
                            <div class="card-body">
                                <h5 class="card-title">@fr.Username</h5>
                                <p class="card-text">@fr.Firstname @fr.Lastname</p>
                            </div>
                        </div>
                    </div>
                    }
            </div>
        </div>
    }
}
@code {

    public class Friend
    {
        [JsonPropertyName("username")]
        public string Username { get; set; }

        [JsonPropertyName("firstname")]
        public string Firstname { get; set; }

        [JsonPropertyName("lastname")]
        public string Lastname { get; set; }

        public string Fullname { get; set; }

        [JsonPropertyName("online")]
        public bool Online { get; set; }

        public Friend()
        {
            Fullname = Firstname + " " + Lastname;
        }
    }

    Friend[] friends;
    bool loggedIn;
    protected override async Task OnInitializedAsync()
    {
        string token = await localStorage.GetItem<string>("token");
        //Console.WriteLine(token);
        if (String.IsNullOrEmpty(token))
        {
            loggedIn = false;
            return;
        }
        loggedIn = true;
        Http.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", token);

        var response = await Http.GetAsync("https://localhost:44314/api/friend/getallmyfriends");
        var responseStatusCode = response.StatusCode;
        var responseBody = await response.Content.ReadAsStringAsync();
        //Console.WriteLine(responseBody);
        friends = JsonSerializer.Deserialize<Friend[]>(responseBody);
    }
}
