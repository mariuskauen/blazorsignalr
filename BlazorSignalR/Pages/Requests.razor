@page "/requests"
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Text.Json.Serialization;
@using Blazor.Extensions.Storage
@using System.Text.Json
@inject HttpClient Http
@inject LocalStorage localStorage
@inject NavigationManager navigationManager

@if (loggedIn == true)
{
    @if (allRequests == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="container">
            <div class="row">

                @foreach (Request re in myRequests)
                {
                    <div class="col">
                        <div class="card px-2" style="width: 18rem;">
                            <img src="https://scontent.fosl3-2.fna.fbcdn.net/v/t1.0-9/11960226_118365771847090_8903831627453773999_n.jpg?_nc_cat=106&_nc_oc=AQm1Gq--bxQH8tOi2D5HZV4Yg2XeZoju10nQBXnI_B1cIJwfZ1qWnz9xkfrBWhr_UFqWjLmyl0RuxTB30Dw7BY9Q&_nc_ht=scontent.fosl3-2.fna&oh=b7af62b04d2e599840da08bd7cec516b&oe=5E2E0A83" class="card-img-top" alt="">
                            <div class="card-body">
                                <h5 class="card-title">@re.FriendName</h5>
                                <p class="card-text">@re.RequestId</p>
                                <a href="#" class="btn btn-primary">Cancel request</a>
                            </div>
                        </div>
                    </div>
                }

                @foreach (Request re in othersRequests)
                {
                    <div class="col">
                        <div class="card px-2" style="width: 18rem;">
                            <img src="https://scontent.fosl3-2.fna.fbcdn.net/v/t1.0-9/11960226_118365771847090_8903831627453773999_n.jpg?_nc_cat=106&_nc_oc=AQm1Gq--bxQH8tOi2D5HZV4Yg2XeZoju10nQBXnI_B1cIJwfZ1qWnz9xkfrBWhr_UFqWjLmyl0RuxTB30Dw7BY9Q&_nc_ht=scontent.fosl3-2.fna&oh=b7af62b04d2e599840da08bd7cec516b&oe=5E2E0A83" class="card-img-top" alt="">
                            <div class="card-body">
                                <h5 class="card-title">@re.FriendName</h5>
                                <p class="card-text">@re.RequestId</p>
                                <button class="btn btn-primary" @onclick="@(e => Accept(re.RequestId))">Accept friend</button>
                                <button class="btn btn-primary">Ignore</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    public class Request
    {
        [JsonPropertyName("requestId")]
        public string RequestId { get; set; }

        [JsonPropertyName("friendName")]
        public string FriendName { get; set; }

        [JsonPropertyName("friendId")]
        public string FriendId { get; set; }
    }

    public class AllRequests
    {
        [JsonPropertyName("my")]
        public List<Request> My { get; set; }

        [JsonPropertyName("others")]
        public List<Request> Others { get; set; }
    }

    Request[] myRequests;
    Request[] othersRequests;
    AllRequests allRequests;
    bool loggedIn;
    string token;
    protected override async Task OnInitializedAsync()
    {
        token = await localStorage.GetItem<string>("token");
        Console.WriteLine(token);
        if (String.IsNullOrEmpty(token))
        {
            loggedIn = false;
            return;
        }
        loggedIn = true;
        Http.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", token);

        var response = await Http.GetAsync("https://localhost:44314/api/friend/getallrequests");
        var responseStatusCode = response.StatusCode;
        var responseBody = await response.Content.ReadAsStringAsync();
        Console.WriteLine(responseBody);
        allRequests = JsonSerializer.Deserialize<AllRequests>(responseBody);

        myRequests = allRequests.My.ToArray();
        othersRequests = allRequests.Others.ToArray();
    }

    async Task Accept(string requestid)
    {
        if (String.IsNullOrEmpty(token))
        {
            return;
        }

        //Console.WriteLine(friendid);

        Http.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", token);

        var requestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri("https://localhost:44314/api/friend/acceptfriend/" + requestid)
        };

        var response = await Http.SendAsync(requestMessage);
        var responseStatusCode = response.StatusCode;
        var responseBody = await response.Content.ReadAsStringAsync();
        //Console.WriteLine(responseBody);
        navigationManager.NavigateTo("/");
    }

}
